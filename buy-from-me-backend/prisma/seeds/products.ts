import { PrismaClient, Products } from '@prisma/client'
const prisma = new PrismaClient();

const products: Products[] = [
  {
    id: 11,
    name: 'Produto 1',
    description: 'Descricao',
    price: 100,
    sold: false,
    categoriesId: 1,
    new: false,
    usersId: '11',
  },
  {
    id: 12,
    name: 'Produto 2',
    description: 'Produto 2',
    price: 300,
    sold: false,
    new: true,
    categoriesId: 1,
    usersId: '12',
  },
  {
    id: 13,
    name: 'Produto 3',
    description: 'produto',
    price: 500,
    sold: false,
    new: false,
    categoriesId: 1,
    usersId: '13',
  },
  {
    id: 14,
    name: 'Produto 4',
    description: 'Produto',
    price: 700,
    sold: false,
    new: true,
    categoriesId: 1,
    usersId: '14',
  },
  {
    id: 15,
    name: 'Produto 5',
    description: 'produto',
    price: 900,
    sold: false,
    new: false,
    categoriesId: 2,
    usersId: '11',
  },
  {
    id: 16,
    name: 'Produto 6',
    description: 'Produto',
    price: 1100,
    sold: false,
    new: true,
    categoriesId: 2,
    usersId: '12',
  },
  {
    id: 17,
    name: 'Produto 7',
    description: 'produto',
    price: 1300,
    sold: false,
    new: false,
    categoriesId: 2,
    usersId: '13',
  },
  {
    id: 18,
    name: 'Produto 8',
    description: 'produto',
    price: 1500,
    sold: false,
    new: true,
    categoriesId: 2,
    usersId: '14',
  },
  {
    id: 19,
    name: 'Produto 9',
    description: 'Produto',
    price: 1700,
    sold: false,
    new: false,
    categoriesId: 3,
    usersId: '11',
  },
  {
    id: 20,
    name: 'Produto 10',
    description: 'produto',
    price: 1900,
    sold: false,
    new: true,
    categoriesId: 3,
    usersId: '12',
  },
  {
    id: 21,
    name: 'Produto 11',
    description: 'produto',
    price: 2100,
    sold: false,
    new: false,
    categoriesId: 3,
    usersId: '13',
  },
  {
    id: 22,
    name: 'Produto 12',
    description: 'produto',
    price: 2300,
    sold: false,
    new: true,
    categoriesId: 3,
    usersId: '14',
  },
  {
    id: 23,
    name: 'Produto 13',
    description: 'produto',
    price: 600,
    sold: false,
    new: false,
    categoriesId: 4,
    usersId: '11',
  },
  {
    id: 24,
    name: 'Produto 14',
    description: 'Produto',
    price: 800,
    sold: false,
    new: true,
    categoriesId: 4,
    usersId: '12',
  },
  {
    id: 25,
    name: 'Produto 15',
    description: 'produto',
    price: 1000,
    sold: false,
    new: false,
    categoriesId: 4,
    usersId: '13',
  },
  {
    id: 26,
    name: 'Produto 16',
    description: 'Produto',
    price: 1200,
    sold: false,
    new: true,
    categoriesId: 4,
    usersId: '14',
  },
  {
    id: 27,
    name: 'Produto 17',
    description: 'produto',
    price: 1400,
    sold: false,
    new: false,
    categoriesId: 5,
    usersId: '11',
  },
  {
    id: 28,
    name: 'Produto 18',
    description: 'produto',
    price: 1500,
    sold: false,
    new: true,
    categoriesId: 5,
    usersId: '12',
  },
  {
    id: 29,
    name: 'Produto 19',
    description: 'Produto',
    price: 1800,
    sold: false,
    new: false,
    categoriesId: 5,
    usersId: '12',
  },
  {
    id: 30,
    name: 'Produto 20',
    description: 'produto',
    price: 2000,
    sold: false,
    new: true,
    categoriesId: 5,
    usersId: '13',
  },
  {
    id: 31,
    name: 'Produto 21',
    description: 'produto',
    price: 2200,
    sold: false,
    new: false,
    categoriesId: 5,
    usersId: '14',
  },
  {
    id: 32,
    name: 'Produto 22',
    description: 'produto',
    price: 2400,
    sold: false,
    new: true,
    categoriesId: 5,
    usersId: '11',
  }
];

async function productsSeed() {
  const resultProducts = products.map(async (products) =>{
    const response = await prisma.products.upsert({
      where: { id: products.id },
      update: {},
      create: {
        ...products,
      },
    })
    return response
  });

  await Promise.all(resultProducts);
};

productsSeed()
  .catch((e) => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  });
